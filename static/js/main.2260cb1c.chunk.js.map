{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","handleClick","className","map","tab","classNames","id","href","onClick","e","currentTarget","title","content","App","useState","setSelectedTabId","find","tabEl","ReactDOM","render","document","getElementById"],"mappings":"uLAcaA,EAAuB,SAAC,GAM/B,IAJFC,EAIC,EAJDA,KACAC,EAGC,EAHDA,cACAC,EAEC,EAFDA,YAGF,OACE,sBAAKC,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBF,KAGtB,gCACE,qBAAKE,UAAU,gBAAf,SACE,6BACGH,EAAKI,KAAI,SAAAC,GAAG,OACX,oBACEF,UAAWG,IACT,CAAE,YAAaL,IAAkBI,EAAIE,KAFzC,SAME,mBACEC,KAAI,WAAMH,EAAIE,IACdA,GAAIF,EAAIE,GACRE,QAAS,SAACC,GACRR,EAAYQ,EAAEC,cAAcJ,KAJhC,SAOGF,EAAIO,SATFP,EAAIE,WAgBjB,qBAAKJ,UAAU,QAAQ,UAAQ,cAA/B,SACGH,EAAKI,KAAI,SAAAC,GAAG,OACXJ,IAAkBI,EAAIE,IACjBF,EAAIQ,oBCjDRb,EAAO,CAClB,CAAEO,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASf,EAAK,GAAGO,IAA3D,mBAAON,EAAP,KAAsBe,EAAtB,KAUA,OACE,cAAC,EAAD,CACEhB,KAAMA,EACNC,cAAeA,EACfC,YAZmB,SAACK,GACtB,IAAMF,EAAML,EAAKiB,MAAK,SAAAC,GAAK,OAAIA,EAAMX,KAAOA,KAExCF,GAAQA,EAAIE,KAAON,GACrBe,EAAiBX,EAAIE,QCf3BY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2260cb1c.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ninterface Tab {\n  id: string,\n  title: string,\n  content: string,\n}\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  handleClick: (arg: string)=>void,\n};\n\nexport const Tabs:React.FC<Props> = (\n  {\n    tabs,\n    selectedTabId,\n    handleClick,\n  },\n) => {\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTabId}`}\n      </h1>\n\n      <div>\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map(tab => (\n              <li\n                className={classNames(\n                  { 'is-active': selectedTabId === tab.id },\n                )}\n                key={tab.id}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  id={tab.id}\n                  onClick={(e) => {\n                    handleClick(e.currentTarget.id);\n                  }}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"tab-content\">\n          {tabs.map(tab => (\n            selectedTabId === tab.id\n              && tab.content\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const onClickTabItem = (id: string) => {\n    const tab = tabs.find(tabEl => tabEl.id === id);\n\n    if (tab && (tab.id !== selectedTabId)) {\n      setSelectedTabId(tab.id);\n    }\n  };\n\n  return (\n    <Tabs\n      tabs={tabs}\n      selectedTabId={selectedTabId}\n      handleClick={onClickTabItem}\n    />\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}